import isDockerMssqlListening from './is-docker-mssql-listening';

/*
Options available, all nullable
{
  docker: Boolean
  protocol: String,
  username: String,
  password: String,
  instance: String,
  database: String,
  server: String,
  port: Int,
  dedicatedAdminConnection: Boolean,
  trustServerCert: Boolean,
  loginTimeout: Int,
  readOnly: Boolean,
  multisubnetFailover: Boolean,
  encryptedConnection: Boolean,
  trustedConnection: Boolean
}*/

const handleDockerOptions = async (sqlcmd, options) => {
  if (sqlcmd && !options.docker) {
    // has a command path, and not set to use docker
    return null; // nothing to do
  }

  // no sqlcmd and no docker options
  // confirm parameters and test for docker instance
  if (!sqlcmd && !options.docker) {
    if (options.server != 'localhost') {
      // will only test against localhost
      return null;
    }

    // check for listening docker instance
    if (!(await isDockerListening(options.port || 1433))) {
      return null; // no matching port, or default on local docker
    }
  }
};

export const __internal = {};
export default handleDockerOptions;
